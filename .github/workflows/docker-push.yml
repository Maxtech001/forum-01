name: Deploy Only to K3s

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: self-hosted

    env:
      IMAGE_NAME: maxtech470/project101
      K8S_NAMESPACE: forum
      MY_SECRET_CODE: ${{ secrets.MY_SECRET_CODE }}
      COMMIT_TAG: latest  # Use the existing image tagged "latest"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Deploy app manifests to K3s
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig.yaml
          export KUBECONFIG=$PWD/kubeconfig.yaml
          kubectl version --client
          kubectl config current-context

          # Create namespace if it doesn't exist
          kubectl get namespace ${K8S_NAMESPACE} || kubectl create namespace ${K8S_NAMESPACE}

          # Apply Deployment
          cat <<EOF | kubectl apply -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: project101
            namespace: ${K8S_NAMESPACE}
            labels:
              app: project101
          spec:
            replicas: 4
            selector:
              matchLabels:
                app: project101
            template:
              metadata:
                labels:
                  app: project101
              spec:
                containers:
                  - name: project101
                    image: ${IMAGE_NAME}:${COMMIT_TAG}
                    ports:
                      - containerPort: 8080
          EOF

          # Apply Service (no nodePort for dynamic assignment)
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: project101-service
            namespace: ${K8S_NAMESPACE}
          spec:
            selector:
              app: project101
            type: NodePort
            ports:
              - protocol: TCP
                port: 80
                targetPort: 8080
          EOF
