name: Tag, Scan, Push Docker Image & Upload to Nexus

on:
  push:
    branches: [master]

jobs:
  build-and-push:
    runs-on: self-hosted  # Must be a self-hosted runner

    env:
      IMAGE_NAME: maxtech470/project101

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Set up JDK 17 (SonarCloud requirement)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run Go tests and generate coverage report
        run: |
          go test ./... -coverprofile=coverage.out

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=maxtech470_project101
            -Dsonar.organization=maxtech470
            -Dsonar.sources=.
            -Dsonar.language=go
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Get next semantic version tag
        id: get_tag
        run: |
          tags=$(curl -s https://hub.docker.com/v2/repositories/${IMAGE_NAME}/tags/?page_size=100 | jq -r '.results[].name' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V)
          if [ -z "$tags" ]; then
            next="v1.0.0"
          else
            latest=$(echo "$tags" | tail -n 1)
            major=$(echo $latest | cut -d. -f1 | sed 's/v//')
            minor=$(echo $latest | cut -d. -f2)
            patch=$(echo $latest | cut -d. -f3)
            patch=$((patch + 1))
            next="v${major}.${minor}.${patch}"
          fi
          echo "tag=$next" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:${{ steps.get_tag.outputs.tag }} .

      - name: Tag image as latest
        run: docker tag $IMAGE_NAME:${{ steps.get_tag.outputs.tag }} $IMAGE_NAME:latest

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:${{ steps.get_tag.outputs.tag }}
          docker push $IMAGE_NAME:latest

      - name: Build Go binary
        run: |
          mkdir -p dist
          go build -o dist/forum-docker .

      - name: Upload artifact to Nexus
        run: |
          curl -v -u "${{ secrets.NEXUS_USER }}:${{ secrets.NEXUS_PASSWORD }}" \
          --upload-file dist/forum-docker \
          "http://localhost:8081/repository/go-artifacts/forum-docker-${{ steps.get_tag.outputs.tag }}"
###
